// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// customPropensitySubstitution
StringVector customPropensitySubstitution(Rcpp::StringVector originalString, List originalParametersList, List originalSpeciesList);
RcppExport SEXP _StochKit2R_customPropensitySubstitution(SEXP originalStringSEXP, SEXP originalParametersListSEXP, SEXP originalSpeciesListSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type originalString(originalStringSEXP);
    Rcpp::traits::input_parameter< List >::type originalParametersList(originalParametersListSEXP);
    Rcpp::traits::input_parameter< List >::type originalSpeciesList(originalSpeciesListSEXP);
    rcpp_result_gen = Rcpp::wrap(customPropensitySubstitution(originalString, originalParametersList, originalSpeciesList));
    return rcpp_result_gen;
END_RCPP
}
// odecpp
RcppExport SEXP odecpp(Rcpp::List StochKit2Rmodel, double endTime, int intervals);
RcppExport SEXP _StochKit2R_odecpp(SEXP StochKit2RmodelSEXP, SEXP endTimeSEXP, SEXP intervalsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type StochKit2Rmodel(StochKit2RmodelSEXP);
    Rcpp::traits::input_parameter< double >::type endTime(endTimeSEXP);
    Rcpp::traits::input_parameter< int >::type intervals(intervalsSEXP);
    rcpp_result_gen = Rcpp::wrap(odecpp(StochKit2Rmodel, endTime, intervals));
    return rcpp_result_gen;
END_RCPP
}
// ssaSingleStochKit2RInterface
RcppExport SEXP ssaSingleStochKit2RInterface(Rcpp::List StochKit2Rmodel, double startTime, double endTime, std::string outputFileNameString, unsigned int seed);
RcppExport SEXP _StochKit2R_ssaSingleStochKit2RInterface(SEXP StochKit2RmodelSEXP, SEXP startTimeSEXP, SEXP endTimeSEXP, SEXP outputFileNameStringSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type StochKit2Rmodel(StochKit2RmodelSEXP);
    Rcpp::traits::input_parameter< double >::type startTime(startTimeSEXP);
    Rcpp::traits::input_parameter< double >::type endTime(endTimeSEXP);
    Rcpp::traits::input_parameter< std::string >::type outputFileNameString(outputFileNameStringSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(ssaSingleStochKit2RInterface(StochKit2Rmodel, startTime, endTime, outputFileNameString, seed));
    return rcpp_result_gen;
END_RCPP
}
// ssaStochKit2RInterface
RcppExport SEXP ssaStochKit2RInterface(Rcpp::List StochKit2Rmodel, double time, int realizations, int intervals, bool keepStats, bool keepTrajectories, bool keepHistograms, int bins, std::string outputDirNameString, unsigned int seed, int p);
RcppExport SEXP _StochKit2R_ssaStochKit2RInterface(SEXP StochKit2RmodelSEXP, SEXP timeSEXP, SEXP realizationsSEXP, SEXP intervalsSEXP, SEXP keepStatsSEXP, SEXP keepTrajectoriesSEXP, SEXP keepHistogramsSEXP, SEXP binsSEXP, SEXP outputDirNameStringSEXP, SEXP seedSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type StochKit2Rmodel(StochKit2RmodelSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< int >::type realizations(realizationsSEXP);
    Rcpp::traits::input_parameter< int >::type intervals(intervalsSEXP);
    Rcpp::traits::input_parameter< bool >::type keepStats(keepStatsSEXP);
    Rcpp::traits::input_parameter< bool >::type keepTrajectories(keepTrajectoriesSEXP);
    Rcpp::traits::input_parameter< bool >::type keepHistograms(keepHistogramsSEXP);
    Rcpp::traits::input_parameter< int >::type bins(binsSEXP);
    Rcpp::traits::input_parameter< std::string >::type outputDirNameString(outputDirNameStringSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(ssaStochKit2RInterface(StochKit2Rmodel, time, realizations, intervals, keepStats, keepTrajectories, keepHistograms, bins, outputDirNameString, seed, p));
    return rcpp_result_gen;
END_RCPP
}
// tauLeapingStochKit2RInterface
RcppExport SEXP tauLeapingStochKit2RInterface(Rcpp::List StochKit2Rmodel, double time, int realizations, int intervals, bool keepStats, bool keepTrajectories, bool keepHistograms, int bins, std::string outputDirNameString, unsigned int seed, int p, double epsilon, int threshold);
RcppExport SEXP _StochKit2R_tauLeapingStochKit2RInterface(SEXP StochKit2RmodelSEXP, SEXP timeSEXP, SEXP realizationsSEXP, SEXP intervalsSEXP, SEXP keepStatsSEXP, SEXP keepTrajectoriesSEXP, SEXP keepHistogramsSEXP, SEXP binsSEXP, SEXP outputDirNameStringSEXP, SEXP seedSEXP, SEXP pSEXP, SEXP epsilonSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type StochKit2Rmodel(StochKit2RmodelSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< int >::type realizations(realizationsSEXP);
    Rcpp::traits::input_parameter< int >::type intervals(intervalsSEXP);
    Rcpp::traits::input_parameter< bool >::type keepStats(keepStatsSEXP);
    Rcpp::traits::input_parameter< bool >::type keepTrajectories(keepTrajectoriesSEXP);
    Rcpp::traits::input_parameter< bool >::type keepHistograms(keepHistogramsSEXP);
    Rcpp::traits::input_parameter< int >::type bins(binsSEXP);
    Rcpp::traits::input_parameter< std::string >::type outputDirNameString(outputDirNameStringSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(tauLeapingStochKit2RInterface(StochKit2Rmodel, time, realizations, intervals, keepStats, keepTrajectories, keepHistograms, bins, outputDirNameString, seed, p, epsilon, threshold));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_StochKit2R_customPropensitySubstitution", (DL_FUNC) &_StochKit2R_customPropensitySubstitution, 3},
    {"_StochKit2R_odecpp", (DL_FUNC) &_StochKit2R_odecpp, 3},
    {"_StochKit2R_ssaSingleStochKit2RInterface", (DL_FUNC) &_StochKit2R_ssaSingleStochKit2RInterface, 5},
    {"_StochKit2R_ssaStochKit2RInterface", (DL_FUNC) &_StochKit2R_ssaStochKit2RInterface, 11},
    {"_StochKit2R_tauLeapingStochKit2RInterface", (DL_FUNC) &_StochKit2R_tauLeapingStochKit2RInterface, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_StochKit2R(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
